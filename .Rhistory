visits <- data[j,c("First.Visit", "Second.Visit", "Third.Visit", "Last.Visit")]
if(!is.na(visits$First.Visit) & !is.na(visits$Last.Visit) & visits$First.Visit == visits$Last.Visit){
visits <- visits[,-1]
}
if(data$Year[j]=="2014 Fall") {
adj.date <- data$Date.App.Submitted[j] + 365
visits <- visits + 365
} else if(data$Year[j]=="2015 Fall") {
adj.date <- data$Date.App.Submitted[j]
} else if(data$Year[j]=="2016 Fall") {
adj.date <- data$Date.App.Submitted[j] - 365
visits <- visits - 365
}
if(adj.date < as.Date("2014-11-01")) data$App.Before.Nov[j] <- 1
# number visits by jan 1
data$Visits.by.Jan1[j] <- suppressWarnings(length(which(visits < as.Date("2015-01-01"))))
# calculate # of admits from zip code currently
zip.ad <- zip.admits[zip.admits$Year==data$Year[j] & zip.admits$Zip==data$Zip[j], 3]
if(length(zip.ad)>0) {
data$Zip.Admits.TY[j] <- zip.ad
data$Zip.Admits.TY.Pct[j] <- (zip.ad/data$Zip.Population[j])
}
}
write.csv(data, "full_factors.csv", row.names=FALSE)
data <-  read.csv("full_factors.csv", stringsAsFactors=FALSE)
x <- data[4,]
if(x$Year == "2014 Fall"){
new.date <- x$Date.App.Submitted + 365
} if(x$Year == "2016 Fall") {
new.date <- x$Date.App.Submitted - 365
} else { new.date <- x$Date.App.Submitted }
indicator <- ifelse(new.date <= as.Date("2015-01-01"), 1, 0)
x
x$Year == "2014 Fall"
new.date <- x$Date.App.Submitted + 365
data$Date.App.Submitted <- as.Date(data$Date.App.Submitted, format="%Y-%m-%d")
new.date <- x$Date.App.Submitted + 365
x <- data[4,]
# calculate # of admits from zip code currently
new.date <- x$Date.App.Submitted + 365
new.date
indicator <- ifelse(new.date <= as.Date("2015-01-01"), 1, 0)
data$Keep <- sapply(data$Date.App.Submitted, splice(x))
splice <- function(x){
if(x$Year == "2014 Fall"){
new.date <- x$Date.App.Submitted + 365
} if(x$Year == "2016 Fall") {
new.date <- x$Date.App.Submitted - 365
} else { new.date <- x$Date.App.Submitted }
indicator <- ifelse(new.date <= as.Date("2015-01-01"), 1, 0)
}
data$Keep <- sapply(data$Date.App.Submitted, splice(x))
data$Keep <- sapply(data, splice(x))
splice <- function(x){
if(x$Year == "2014 Fall"){
new.date <- x$Date.App.Submitted + 365
} if(x$Year == "2016 Fall") {
new.date <- x$Date.App.Submitted - 365
} else { new.date <- x$Date.App.Submitted }
indicator <- ifelse(new.date <= as.Date("2015-01-01"), 1, 0)
}
splice <- function(x){
if(x$Year == "2014 Fall"){
new.date <- x$Date.App.Submitted + 365
} if(x$Year == "2016 Fall") {
new.date <- x$Date.App.Submitted - 365
} else { new.date <- x$Date.App.Submitted }
indicator <- ifelse(new.date <= as.Date("2015-01-01"), 1, 0)
}
splice <- function(x){
if(x$Year == "2014 Fall"){
new.date <- x$Date.App.Submitted + 365
} else if(x$Year == "2016 Fall") {
new.date <- x$Date.App.Submitted - 365
} else { new.date <- x$Date.App.Submitted }
indicator <- ifelse(new.date <= as.Date("2015-01-01"), 1, 0)
}
data$Keep <- sapply(data, splice(x))
data$Keep <-0
for(u in seq_along(data$ID){
if(x$Year[u] == "2014 Fall"){
new.date <- x$Date.App.Submitted[u] + 365
} else if(x$Year[u] == "2016 Fall") {
new.date <- x$Date.App.Submitted[u] - 365
} else { new.date <- x$Date.App.Submitted[u] }
data$Keep[u] <- ifelse(new.date <= as.Date("2015-01-01"), 1, 0)
}
data$Keep <-0
for(u in seq_along(data$ID)){
if(x$Year[u] == "2014 Fall"){
new.date <- x$Date.App.Submitted[u] + 365
} else if(x$Year[u] == "2016 Fall") {
new.date <- x$Date.App.Submitted[u] - 365
} else { new.date <- x$Date.App.Submitted[u] }
data$Keep[u] <- ifelse(new.date <= as.Date("2015-01-01"), 1, 0)
}
data$Keep <-0
for(u in seq_along(data$ID)){
if(data$Year[u] == "2014 Fall"){
new.date <- data$Date.App.Submitted[u] + 365
} else if(data$Year[u] == "2016 Fall") {
new.date <- data$Date.App.Submitted[u] - 365
} else { new.date <- data$Date.App.Submitted[u] }
data$Keep[u] <- ifelse(new.date <= as.Date("2015-01-01"), 1, 0)
}
table(data$Keep)
table(data$Keep, data$Year)
data2 <- data[data$Keep==1, ]
View(data2)
names(data)
setwd("/Users/kaylinwalker/R/yield/")
data <- read.csv("data/all_combined.csv", stringsAsFactors=FALSE)
# clean up
data <- data[data$ID!="", ] # remove anyone w/o an ID
data <- data[grepl("Fall", data$Year), ] # keep only fall entrances
data$Contact.Status <- gsub("\\: ", "", data$Contact.Status)
data$Co.Curricular <- tolower(data$Co.Curricular)
data$Major.Interest <- tolower(data$Major.Interest)
data$Date.App.Submitted <- as.Date(data$Date.App.Submitted, format="%m/%d/%Y")
data$Date.App.Completed <- as.Date(data$Date.App.Completed, format="%m/%d/%Y")
data$Date.Deposited <- as.Date(data$Date.Deposited, format="%m/%d/%Y")
data$First.Visit <- as.Date(data$First.Visit, format="%Y-%m-%d")
data$Second.Visit <- as.Date(data$Second.Visit, format="%Y-%m-%d")
data$Third.Visit <- as.Date(data$Third.Visit, format="%Y-%m-%d")
data$Last.Visit <- as.Date(data$Last.Visit, format="%Y-%m-%d")
data <- data[!is.na(data$Date.App.Submitted), ]
# create indicator variables
data$Music.Interest <- 0
data$Athletic.Interest <- 0
data$Legacy.Relationship <- 0
data$Gender.Indicator <- 0
data$Final.Status <- 0
data$Made.Deposit <- 0
data$Ethnicity.Indicator <- 0
data$Lutheran.Indicator <- 0
data$Religious.Indicator <- 0
data$FAFSA <- 0
data$Zip.Admits.TY <- 0
data$Zip.Admits.TY.Pct <- 0
data$App.Before.Nov <- 0
data$Visits.by.Jan1 <- 0
data[j,]
data[1,]
j <-1
if(data$Year[j]=="2014 Fall"){
edit <- 365
} else if(data$Year[j]=="2016 Fall"){
edit <- -365
} else { edit <- 0 }
for(b in c(9:11,24:27)) {
data[j,b] <- data[j,b] + edit
}
data[j,]
for(j in seq_along(data[,1])){
if(data$Year[j]=="2014 Fall"){
edit <- 365
} else if(data$Year[j]=="2016 Fall"){
edit <- -365
} else { edit <- 0 }
for(b in c(9:11,24:27)) {
data[j,b] <- data[j,b] + edit
}
}
zip.admits <- data.frame(table(data$Year, data$Zip))
colnames(zip.admits) <- c("Year", "Zip", "Count")
zip.deposits <- data.frame(table(data$Year[data$Contact.Status=="Deposit"], data$Zip[data$Contact.Status=="Deposit"]))
colnames(zip.deposits) <- c("Year", "Zip", "Count")
#year.ref <- data.frame(TY=c("2015 Fall", "2014 Fall", "2013 Fall", "2012 Fall", "2011 Fall", "2010 Fall"), LY=c("2014 Fall", "2013 Fall", "2012 Fall", "2011 Fall", "2010 Fall", NA), stringsAsFactors=FALSE)
j <-1
j <-5
if(data$Legacy[j]!="") data$Legacy.Relationship[j] <- 1
if(grepl("music|band|orchestra|choir|choral", data$Co.Curricular[j])) { data$Music.Interest[j] <- 1 }
if(grepl("music|band|orchestra|choir|choral", data$Major.Interest[j])) { data$Music.Interest[j] <- 1 }
if(grepl("baseball|basketball|hockey|track|field|wrestling|cross country|golf|
softball|diving|tennis|volleyball", data$Co.Curricular[j])) { data$Athletic.Interest[j] <- 1 }
if(data$Gender[j] == "Male") {
data$Gender.Indicator[j] <- 1
} else if (data$Gender[j] == "Female") {
data$Gender.Indicator[j] <- 0
} else {
data$Gender.Indicator[j] <- NA
}
if(data$Contact.Status[j]=="Deposit") {
data$Final.Status[j] <- 1
}
if(data$Admission.Substatus[j]=="Cancel: Deposit"){
data$Made.Deposit[j] <- 1
} else if(data$Contact.Status[j]=="Deposit"){
data$Made.Deposit[j] <- 1
}
if(!is.na(data$Award.Status[j])){
data$FAFSA[j] <- 1
if(data$Award.Status[j]=="No Award") {
data$Award.Status[j] <- 0
} else if(data$Award.Status[j]=="Award Complete") {
data$Award.Status[j] <- 1
}
} else {
data$Award.Status[j] <- 0
}
if(is.na(data$Total.Gift[j])) data$Total.Gift[j] <- 0
if(is.na(data$Total.Institutional.Gift[j])) data$Total.Institutional.Gift[j] <- 0
if(is.na(data$Gross.Need[j])) data$Gross.Need[j] <- 0
if(grepl("Indian|Native|Black|African|Pacific|Asian|Two|Hispanic|Multiracial", data$Ethnicity[j])){
data$Ethnicity.Indicator[j] <- 1
}
if(grepl("Lutheran|ELCA|Luthern|Lutheren", data$Religious.Preference[j])) {
data$Lutheran.Indicator[j] <- 1
}
if(!grepl("Unknown|None|No Affiliation|No religious affiliation|Not Reported|Prefer not to respond", data$Religious.Preference[j])) {
data$Religious.Indicator[j] <- 1
}
if(data$Religious.Preference[j]=="") data$Religious.Indicator[j] <- 0
if(!is.na(data$Royal.ID[j])) {
data$Royal15[j] <- 1
}
if(is.na(data$Countdown[j])) data$Countdown[j] <- 0
if(is.na(data$Summer[j])) data$Summer[j] <- 0
if(is.na(data$Number.Campus.Visits.y[j])) data$Number.Campus.Visits.y[j] <- 0
visits <- data[j,c("First.Visit", "Second.Visit", "Third.Visit", "Last.Visit")]
visits
!is.na(visits$First.Visit) & !is.na(visits$Last.Visit) & visits$First.Visit == visits$Last.Visit
data$date.App.Submitted[j] < as.Date("2014-11-01")
data$Date.App.Submitted[j] < as.Date("2014-11-01")
data[j,]
suppressWarnings(length(which(visits < as.Date("2015-01-01"))))
for(j in seq_along(data[,1])){
if(data$Legacy[j]!="") data$Legacy.Relationship[j] <- 1
if(grepl("music|band|orchestra|choir|choral", data$Co.Curricular[j])) { data$Music.Interest[j] <- 1 }
if(grepl("music|band|orchestra|choir|choral", data$Major.Interest[j])) { data$Music.Interest[j] <- 1 }
if(grepl("baseball|basketball|hockey|track|field|wrestling|cross country|golf|
softball|diving|tennis|volleyball", data$Co.Curricular[j])) { data$Athletic.Interest[j] <- 1 }
if(data$Gender[j] == "Male") {
data$Gender.Indicator[j] <- 1
} else if (data$Gender[j] == "Female") {
data$Gender.Indicator[j] <- 0
} else {
data$Gender.Indicator[j] <- NA
}
if(data$Contact.Status[j]=="Deposit") {
data$Final.Status[j] <- 1
}
if(data$Admission.Substatus[j]=="Cancel: Deposit"){
data$Made.Deposit[j] <- 1
} else if(data$Contact.Status[j]=="Deposit"){
data$Made.Deposit[j] <- 1
}
if(!is.na(data$Award.Status[j])){
data$FAFSA[j] <- 1
if(data$Award.Status[j]=="No Award") {
data$Award.Status[j] <- 0
} else if(data$Award.Status[j]=="Award Complete") {
data$Award.Status[j] <- 1
}
} else {
data$Award.Status[j] <- 0
}
if(is.na(data$Total.Gift[j])) data$Total.Gift[j] <- 0
if(is.na(data$Total.Institutional.Gift[j])) data$Total.Institutional.Gift[j] <- 0
if(is.na(data$Gross.Need[j])) data$Gross.Need[j] <- 0
if(grepl("Indian|Native|Black|African|Pacific|Asian|Two|Hispanic|Multiracial", data$Ethnicity[j])){
data$Ethnicity.Indicator[j] <- 1
}
if(grepl("Lutheran|ELCA|Luthern|Lutheren", data$Religious.Preference[j])) {
data$Lutheran.Indicator[j] <- 1
}
if(!grepl("Unknown|None|No Affiliation|No religious affiliation|Not Reported|Prefer not to respond", data$Religious.Preference[j])) {
data$Religious.Indicator[j] <- 1
}
if(data$Religious.Preference[j]=="") data$Religious.Indicator[j] <- 0
if(!is.na(data$Royal.ID[j])) {
data$Royal15[j] <- 1
}
if(is.na(data$Countdown[j])) data$Countdown[j] <- 0
if(is.na(data$Summer[j])) data$Summer[j] <- 0
if(is.na(data$Number.Campus.Visits.y[j])) data$Number.Campus.Visits.y[j] <- 0
# applied before nov 1
# number visits by jan 1
visits <- data[j,c("First.Visit", "Second.Visit", "Third.Visit", "Last.Visit")]
if(!is.na(visits$First.Visit) & !is.na(visits$Last.Visit) & visits$First.Visit == visits$Last.Visit){
visits <- visits[,-1]
}
if(data$Date.App.Submitted[j] < as.Date("2014-11-01")) data$App.Before.Nov[j] <- 1
# number visits by jan 1
data$Visits.by.Jan1[j] <- suppressWarnings(length(which(visits < as.Date("2015-01-01"))))
# calculate # of admits from zip code currently
zip.ad <- zip.admits[zip.admits$Year==data$Year[j] & zip.admits$Zip==data$Zip[j], 3]
if(length(zip.ad)>0) {
data$Zip.Admits.TY[j] <- zip.ad
data$Zip.Admits.TY.Pct[j] <- (zip.ad/data$Zip.Population[j])
}
}
View(data)
write.csv(data, "full_factors.csv", row.names=FALSE)
data <-  read.csv("full_factors.csv", stringsAsFactors=FALSE)
data$Date.App.Submitted <- as.Date(data$Date.App.Submitted, format="%Y-%m-%d")
data2 <- data[data$Date.App.Submitted >= as.Date("2015-01-01"), ]
hist(data$Date.App.Submitted)
hist(data$Date.App.Submitted, breaks=100)
data2 <- data[data$Date.App.Submitted <= as.Date("2015-01-01"), ]
table(data2$Made.Deposit, data2$Final.Status)
# remove excess
remove <- c("ID", "Contact.Status", "Admission.Substatus", "Major.Interest", "Date.App.Submitted",
"Date.App.Completed", "Date.Deposited", "Legacy", "Co.Curricular", "Gender", "Ethnicity", "Religious.Preference",
"HS.Name", "City", "State", "Zip", "Number.Campus.Visits.x", "Royal.ID", "First.Visit", "Last.Visit",
"Comprehensive.Cost", "Total.Institutional.Gift")
data.min <- data[,-which(names(data) %in% c(remove))]
View(data.min)
remove <- c("ID", "Contact.Status", "Admission.Substatus", "Major.Interest", "Date.App.Submitted",
"Date.App.Completed", "Date.Deposited", "Legacy", "Co.Curricular", "Gender", "Ethnicity", "Religious.Preference",
"HS.Name", "City", "State", "Zip", "Number.Campus.Visits.x", "Royal.ID", "First.Visit", "Second.Visit", "Third.Visit", "Last.Visit",
"Comprehensive.Cost", "Total.Institutional.Gift")
data.min <- data[,-which(names(data) %in% c(remove))]
View(data.min)
remove <- c("ID", "Contact.Status", "Admission.Substatus", "Major.Interest", "Date.App.Submitted",
"Date.App.Completed", "Date.Deposited", "Legacy", "Co.Curricular", "Gender", "Ethnicity", "Religious.Preference",
"HS.Name", "City", "State", "Zip", "Number.Campus.Visits.x", "Royal.ID", "First.Visit", "Second.Visit", "Third.Visit", "Last.Visit",
"Summer", "Countdown", "Comprehensive.Cost", "Total.Institutional.Gift")
data.min <- data[,-which(names(data) %in% c(remove))]
# remove excess
remove <- c("ID", "Contact.Status", "Admission.Substatus", "Major.Interest", "Date.App.Submitted",
"Date.App.Completed", "Date.Deposited", "Legacy", "Co.Curricular", "Gender", "Ethnicity", "Religious.Preference",
"HS.Name", "City", "State", "Zip", "Number.Campus.Visits.x", "Royal.ID", "First.Visit", "Second.Visit", "Third.Visit", "Last.Visit",
"Summer", "Countdown", "Comprehensive.Cost", "Total.Institutional.Gift", "FAFSA")
data.min <- data[,-which(names(data) %in% c(remove))]
View(data.min)
remove <- c("ID", "Contact.Status", "Admission.Substatus", "Major.Interest", "Date.App.Submitted",
"Date.App.Completed", "Date.Deposited", "Legacy", "Co.Curricular", "Gender", "Ethnicity", "Religious.Preference",
"HS.Name", "City", "State", "Zip", "Number.Campus.Visits.x", "Royal.ID", "First.Visit", "Second.Visit", "Third.Visit", "Last.Visit",
"Summer", "Countdown", "Comprehensive.Cost", "Total.Institutional.Gift", "FAFSA", "Number.Campus.Visits.y")
data.min <- data[,-which(names(data) %in% c(remove))]
remove <- c("ID", "Contact.Status", "Admission.Substatus", "Major.Interest", "Date.App.Submitted",
"Date.App.Completed", "Date.Deposited", "Legacy", "Co.Curricular", "Gender", "Ethnicity", "Religious.Preference",
"HS.Name", "City", "State", "Zip", "Number.Campus.Visits.x", "Royal.ID", "First.Visit", "Second.Visit", "Third.Visit", "Last.Visit",
"Summer", "Countdown", "Comprehensive.Cost", "Total.Institutional.Gift",
# removed due to time concerns (post-1/1)
"FAFSA", "Number.Campus.Visits.y",
"Cost.of.Attendance", "Total.Gift", "Gross.Need")
data.min <- data[,-which(names(data) %in% c(remove))]
View(data.min)
remove <- c("ID", "Contact.Status", "Admission.Substatus", "Major.Interest", "Date.App.Submitted",
"Date.App.Completed", "Date.Deposited", "Legacy", "Co.Curricular", "Gender", "Ethnicity", "Religious.Preference",
"HS.Name", "City", "State", "Zip", "Number.Campus.Visits.x", "Royal.ID", "First.Visit", "Second.Visit", "Third.Visit", "Last.Visit",
"Summer", "Countdown", "Comprehensive.Cost", "Total.Institutional.Gift",
# removed due to time concerns (post-1/1)
"FAFSA", "Number.Campus.Visits.y", "Award.Status",
"Cost.of.Attendance", "Total.Gift", "Gross.Need")
data.min <- data[,-which(names(data) %in% c(remove))]
remove <- c("ID", "Contact.Status", "Admission.Substatus", "Major.Interest", "Date.App.Submitted",
"Date.App.Completed", "Date.Deposited", "Legacy", "Co.Curricular", "Gender", "Ethnicity", "Religious.Preference",
"HS.Name", "City", "State", "Zip", "Number.Campus.Visits.x", "Royal.ID", "First.Visit", "Second.Visit", "Third.Visit", "Last.Visit",
"Summer", "Countdown", "Comprehensive.Cost", "Total.Institutional.Gift",
# removed due to time concerns (post-1/1)
"FAFSA", "Number.Campus.Visits.y", "Award.Status", "Made.Deposit",
"Cost.of.Attendance", "Total.Gift", "Gross.Need")
data.min <- data[,-which(names(data) %in% c(remove))]
View(data.min)
View(data.min)
for(j in seq_along(data2[,1])){
# calculate # of admits from zip code currently
zip.ad <- zip.admits[zip.admits$Year==data2$Year[j] & zip.admits$Zip==data2$Zip[j], 3]
if(length(zip.ad)>0) {
data2$Zip.Admits.TY[j] <- zip.ad
data2$Zip.Admits.TY.Pct[j] <- (zip.ad/data2$Zip.Population[j])
}
}
View(data2)
data2$Zip.Admits.TY <- 0
data2$Zip.Admits.TY.Pct <- 0
for(j in seq_along(data2[,1])){
# calculate # of admits from zip code currently
zip.ad <- zip.admits[zip.admits$Year==data2$Year[j] & zip.admits$Zip==data2$Zip[j], 3]
if(length(zip.ad)>0) {
data2$Zip.Admits.TY[j] <- zip.ad
data2$Zip.Admits.TY.Pct[j] <- (zip.ad/data2$Zip.Population[j])
}
}
# remove excess
remove <- c("ID", "Contact.Status", "Admission.Substatus", "Major.Interest", "Date.App.Submitted",
"Date.App.Completed", "Date.Deposited", "Legacy", "Co.Curricular", "Gender", "Ethnicity", "Religious.Preference",
"HS.Name", "City", "State", "Zip", "Number.Campus.Visits.x", "Royal.ID", "First.Visit", "Second.Visit", "Third.Visit", "Last.Visit",
"Summer", "Countdown", "Comprehensive.Cost", "Total.Institutional.Gift",
# removed due to time concerns (post-1/1)
"FAFSA", "Number.Campus.Visits.y", "Award.Status", "Made.Deposit",
"Cost.of.Attendance", "Total.Gift", "Gross.Need")
data.min <- data[,-which(names(data) %in% c(remove))]
View(data.min)
for(k in c(11,22)) data.min[,k] <- data.min[,k]*10000
for(i in c(7,8)) data.min[,i] <- data.min[,i]/1000
data.min$Zip.Admits.TY.Pct <- gsub("Inf", NA, data.min$Zip.Admits.TY.Pct)
data.min$Zip.Pct.White <- data.min$Zip.Pct.White*100
data.min$GPA <- data.min$GPA*10
write.csv(data.min, "min_factors.csv", row.names=FALSE)
setwd("/Users/kaylinwalker/R/yield")
data <- read.csv("min_factors.csv", stringsAsFactors=FALSE)
library(reshape2)
library(ggplot2)
library(mice)
library(lattice)
data$Year <- factor(data$Year)
missing <- data.frame(var=names(data))
for(u in levels(data$Year)) {
subset <- data[data$Year==u, ]
miss <- data.frame(var=names(subset))
for(g in seq_along(data)) { miss$NAs[g] <- round(sum(is.na(subset[,g]))/length(subset[,g]),4)  }
missing <- cbind(missing, miss$NAs)
}
missing
colnames(missing) <- c("Variable", levels(data$Year))
missing2 <- melt(missing, id="Variable")
ggplot(missing2, aes(Variable, value)) + geom_bar(stat="identity", position="dodge", aes(fill=variable)) +
scale_fill_brewer(palette="Paired") + ylab("Percent Missing") + xlab("") + theme_classic() + geom_hline(yintercept=.4) +
theme(axis.text.x = element_text(angle=30, hjust=1, size=12)) + labs(title="Missingness by Variable")
ggplot(missing2, aes(Variable, value)) + geom_bar(stat="identity", position="dodge", aes(fill=variable)) +
ylab("Percent Missing") + xlab("") + theme_classic() + geom_hline(yintercept=.4) +
theme(axis.text.x = element_text(angle=30, hjust=1, size=12)) + labs(title="Missingness by Variable")
ggplot(missing2, aes(Variable, value)) + geom_bar(stat="identity", position="dodge", aes(fill=variable))
View(missing2)
collin <- round(cor(data[,2:24], use = "pair"), 2)
collin
write.csv(collin, "co.csv")
data1fit <- data[ , -c(12)] # drop hs size
tempData <- mice(data1fit, m=1, maxit=50, meth='pmm', seed=500)
??mice
library(mice)
install.packages("mice")
library(mice)
tempData <- mice(data1fit, m=1, maxit=50, meth='pmm', seed=500)
summary(tempData)
densityplot(tempData)
dev.off()
densityplot(tempData)
data1fit.imp <- complete(tempData, 1)
head(data1fit.imp)
train1 <- data1fit.imp[data1fit.imp$Year!="2016 Fall", ]
test1 <- data1fit.imp[data1fit.imp$Year=="2016 Fall", ]
fit1g <- glm(Final.Status ~ ., train1[,-1], family="binomial")
summary(fit1gs)
summary(fit1g)
fit1gs <- step(fit1g, direction="both", trace=0)
summary(fit1gs)
coef1 <- exp(cbind(Odds.Ratio = coef(fit1gs), confint(fit1gs)))
doef1
coef1
test1$Predictions_raw <- unlist(predict(fit1gs, test1, type="response"))
test <- data.frame()
for( cutoff in c(.05, .1, .15, .2, .25, .3, .35, .4, .45, .5, .55, .6, .8, .9)) {
test1$Predictions <- sapply(test1$Predictions_raw, function(x) if(x>cutoff){x<-1}else{x<-0}) #0.2 cutoff is best
results <- table(test1$Predictions, test1$Final.Status)
accuracy <- round((results[1,1] + results[2,2])/sum(results[,1], results[,2]),2)
fn <- round(results[1,2]/sum(results[,2]),2)
tn <- round(results[1,1]/sum(results[,1]),2)
fp <- round(results[2,1]/sum(results[,1]),2)
tp <- round(results[2,2]/sum(results[,2]),2)
row <- data.frame(cutoff, accuracy, tp, tn, fp, fn)
test <- rbind(test, row)
}
test1$Predictions <- sapply(test1$Predictions_raw, function(x) if(x>cutoff){x<-1}else{x<-0}) #0.2 cutoff is best
test1
cutoff <- .3
test1$Predictions_raw <- unlist(predict(fit1gs, test1, type="response"))
summary(test1$Predictions_raw)
test1$Predictions <- ifelse(test1$Predictions_raw>cutoff), 1, 0) #0.2 cutoff is best
test1$Predictions <- ifelse(test1$Predictions_raw>cutoff, 1, 0) #0.2 cutoff is best
table(test1$Predictions)
results <- table(test1$Predictions, test1$Final.Status)
results
accuracy <- round((results[1,1] + results[2,2])/sum(results[,1], results[,2]),2)
fn <- round(results[1,2]/sum(results[,2]),2)
tn <- round(results[1,1]/sum(results[,1]),2)
fp <- round(results[2,1]/sum(results[,1]),2)
tp <- round(results[2,2]/sum(results[,2]),2)
row <- data.frame(cutoff, accuracy, tp, tn, fp, fn)
row
test <- data.frame()
for( cutoff in c(.05, .1, .15, .2, .25, .3, .35, .4, .45, .5, .55, .6, .8, .9)) {
test1$Predictions <- ifelse(test1$Predictions_raw>cutoff, 1, 0) #0.2 cutoff is best
results <- table(test1$Predictions, test1$Final.Status)
accuracy <- round((results[1,1] + results[2,2])/sum(results[,1], results[,2]),2)
fn <- round(results[1,2]/sum(results[,2]),2)
tn <- round(results[1,1]/sum(results[,1]),2)
fp <- round(results[2,1]/sum(results[,1]),2)
tp <- round(results[2,2]/sum(results[,2]),2)
row <- data.frame(cutoff, accuracy, tp, tn, fp, fn)
test <- rbind(test, row)
}
test1$Predictions <- ifelse(test1$Predictions_raw>cutoff, 1, 0) #0.2 cutoff is best
results <- table(test1$Predictions, test1$Final.Status)
results
test <- data.frame()
for( cutoff in c(.05, .1, .15, .2, .25, .3, .35, .4, .45, .5, .55, .6, .8)) {
test1$Predictions <- ifelse(test1$Predictions_raw>cutoff, 1, 0) #0.2 cutoff is best
results <- table(test1$Predictions, test1$Final.Status)
accuracy <- round((results[1,1] + results[2,2])/sum(results[,1], results[,2]),2)
fn <- round(results[1,2]/sum(results[,2]),2)
tn <- round(results[1,1]/sum(results[,1]),2)
fp <- round(results[2,1]/sum(results[,1]),2)
tp <- round(results[2,2]/sum(results[,2]),2)
row <- data.frame(cutoff, accuracy, tp, tn, fp, fn)
test <- rbind(test, row)
}
library(ROCR)
install.packages("ROCR")
library(ROCR)
pred <- prediction(test1$Predictions, test1$Final.Status)
perf <- performance(pred, "tpr", "fpr")
plot(perf)
View(test)
test1$Predictions <- ifelse(test1$Predictions_raw>0.6, 1, 0)
pred <- prediction(test1$Predictions, test1$Final.Status)
perf <- performance(pred, "tpr", "fpr")
plot(perf)
